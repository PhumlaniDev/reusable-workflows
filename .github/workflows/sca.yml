---
name: Dependency Scanning (SCA)

on:
  workflow_dispatch:
  workflow_call:
    inputs:
      project_name:
        description: "Name of the project"
        required: false
        type: string
    secrets:
      DOCKERHUB_USERNAME:
        required: true
      DOCKERHUB_PASSWORD:
        required: true
      SNYK_TOKEN:
        required: true

permissions:
  actions: read
  contents: read
  security-events: write

jobs:
  sca:
    strategy:
      fail-fast: false
      matrix:
        os: ["ubuntu-latest"] # [ "macos-latest", "windows-latest", "ubuntu-20.04" ]
        # Test once with explicit manifest_file, and once without
        manifest_file: ["pom.xml"]
    runs-on: ${{ matrix.os }}
    defaults:
      run:
        shell: bash
    name: SCA Java project
    steps:
      - name: Checkout action
        uses: actions/checkout@v4

      - name: Set up JDK 21
        uses: actions/setup-java@v4
        with:
          distribution: 'temurin'
          java-version: '21'
          cache: 'maven'

      - name: Install SCA tool (CRDA)
        uses: redhat-actions/openshift-tools-installer@v1
        with:
          source: github
          github_pat: ${{ github.token }}
          crda: "latest"

      - name: Force DNS to Google
        run: |
          echo "nameserver 8.8.8.8" | sudo tee /etc/resolv.conf > /dev/null

      - name: Test Internet Connectivity
        run: |
          curl -v https://gw.api.openshift.io/user || echo "Failed to connect"

      - name: SCA (CRDA) Scan with Retry
        id: scan
        run: |
          MAX_RETRIES=3
          COUNT=0
          SUCCESS=false
                
          while [[ $COUNT -lt $MAX_RETRIES ]]; do
            echo "Attempt $((COUNT+1)) of $MAX_RETRIES"
            crda analyse --manifest-file ${{ matrix.manifest_file }} --report-output crda-report.json --json --snyk-token ${{ secrets.SNYK_TOKEN }} || true
            EXIT_CODE=$?
                
            if [ $EXIT_CODE -eq 0 ]; then
              SUCCESS=true
              break
            fi
                
            COUNT=$((COUNT+1))
            echo "Retrying in 10 seconds..."
            sleep 10
          done
                
          if [ "$SUCCESS" = false ]; then
            echo "CRDA scan failed after $MAX_RETRIES attempts"
            exit 1
          fi
                
          echo "CRDA scan completed successfully"

      - name: Print JSON analysis report
        if: ${{ always() && steps.scan.conclusion == 'success' }}
        run: cat crda-report.json || echo "No report found"

      - name: Print SARIF analysis report
        if: ${{ always() && steps.scan.outputs.crda_report_sarif }}
        run: cat ${{ steps.scan.outputs.crda_report_sarif }}

      - name: Print Report Link
        run: echo ${{ steps.scan.outputs.report_link }}

      - name: Print Artifact Name
        run: echo ${{ steps.scan.outputs.artifact_name }}

  vulnerability-scan:
    name: Security Scans
    uses: PhumlaniDev/reusable-workflows/.github/workflows/java-maven-vulnerability_scan.yml@main
    with:
      project_name: ${{ inputs.project_name }}
    secrets:
      DOCKERHUB_USERNAME: ${{ secrets.DOCKERHUB_USERNAME }}
      DOCKERHUB_PASSWORD: ${{ secrets.DOCKERHUB_PASSWORD }}