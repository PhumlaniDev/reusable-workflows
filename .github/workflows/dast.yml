---
name: Dynamic Application Security Testing (DAST)
on:
  workflow_dispatch:
  workflow_call:
    secrets:
      DOCKERHUB_USERNAME:
        required: true
      DOCKERHUB_PASSWORD:
        required: true

permissions:
  actions: read
  contents: read
  security-events: write

env:
  IMAGE_TAG: ${{ secrets.DOCKERHUB_USERNAME }}/tech-hive-store:latest


jobs:
  dast-scan:
    name: DAST Scan
    runs-on: ubuntu-latest
    steps:
      - name: Log in to Docker Hub
        run: |
          echo "${{ secrets.DOCKERHUB_PASSWORD }}" | docker login \
          -u "${{ secrets.DOCKERHUB_USERNAME }}" --password-stdin

      - name: Start Application Container
        run: |
          docker run -d -p 8080:8080 --name tech-hive-store \
          ${{ secrets.DOCKERHUB_USERNAME }}/tech-hive-store:latest
          sleep 5  # Give it time to initialize
          docker logs tech-hive-store  # Check logs for errors

      - name: Check running containers
        run: docker ps -a

      - name: Wait for container to start
        run: |
          for i in {1..60}; do
            STATUS=$(curl -s -o /dev/null -w '%{http_code}' localhost:8080)
            echo "Attempt $i: HTTP Status: $STATUS"
            if [ "$STATUS" == "200" ]; then exit 0; fi
            sleep 5
          done
          echo "‚ùå Application did not start in time!" && exit 1
      

      - name: Test container
        run: curl -s localhost:8080

      - name: Run ZAP OWASP full scan
        uses: zaproxy/action-full-scan@v0.12.0
        with:
          docker_name: 'owasp/zap2docker-stable'
          token: ${{ secrets.GITHUB_TOKEN }}
          target: 'http://localhost:8080'
          cmd_options: '-a -j -l WARN -z "-addoninstallall" '
          allow_issue_writing: true

      - name: Upload html report
        uses: actions/upload-artifact@v4
        with:
          name: DAST_Report.html
          path: report_html.html

      - name: Stop Docker
        if: always()
        run: |
          if docker ps -a --format '{{.Names}}' | grep -q "tech-hive-store"; then
            docker stop tech-hive-store && docker rm tech-hive-store
          fi
          docker container prune --force
          docker image prune --force