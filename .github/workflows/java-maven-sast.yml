name: Static Code Analysis (SAST)

on:
  workflow_dispatch:
  workflow_call:
    secrets:
      SONAR_TOKEN:
        required: true
      SONAR_URL:
        required: true
      SONAR_PROJECT_KEY:
        required: true
      SONAR_ORGANIZATION:
        required: true

permissions:
  actions: read
  contents: read
  security-events: write

jobs:
  codeql:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout Code
        uses: actions/checkout@v4

      - name: Set up JDK 21
        uses: actions/setup-java@v4
        with:
          distribution: temurin
          java-version: 21

      - name: Initialize CodeQL
        uses: github/codeql-action/init@v3
        with:
          languages: java

      - name: Download Maven Target
        uses: actions/download-artifact@v4
        with:
          name: maven-target

      - name: Package Maven
        run: mvn -DskipTests package

      - name: Build Maven Project
        uses: github/codeql-action/analyze@v3

  sonar:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout Code
        uses: actions/checkout@v4
        with:
          fetch-depth: 0  # Fetch all history for accurate analysis

      - name: Setup Java
        uses: actions/setup-java@v4
        with:
          distribution: temurin
          java-version: 21
          cache: maven

      - name: Cache SonarQube packages
        uses: actions/cache@v4
        with:
          path: ~/.sonar/cache
          key: ${{ runner.os }}-sonar
          restore-keys: ${{ runner.os }}-sonar

      - name: Cache Maven packages
        uses: actions/cache@v4
        with:
          path: ~/.m2
          key: ${{ runner.os }}-m2-${{ hashFiles('**/pom.xml') }}
          restore-keys: ${{ runner.os }}-m2

      - name: Download Maven Target
        uses: actions/download-artifact@v4
        with:
          name: maven-target

      - name: Run SonarQube Analysis
        run: |
          mvn verify sonar:sonar \
            -Dsonar.token=${{ secrets.SONAR_TOKEN }} \
            -Dsonar.host.url=${{ secrets.SONAR_URL }} \
            -Dsonar.organization=${{ secrets.SONAR_ORGANIZATION }} \
            -Dsonar.projectKey=${{ secrets.SONAR_PROJECT_KEY }}

  spotbugs:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout Code
        uses: actions/checkout@v4
        with:
          fetch-depth: 0  # Fetch all history for accurate analysis

      - name: Download Maven Target
        uses: actions/download-artifact@v4
        with:
          name: maven-target

      - name: Run SpotBugs
        uses: jmservera/spotbugs-github-action@v0.1.0-alpha
        with:
          packages: com.example.*
          target: ./target
          dependenciesPath: ~/.m2
          basePath: src/main/java

  semgrep:
    runs-on: ubuntu-latest
    container:
      image: returntocorp/semgrep
    steps:
      - name: Checkout Code
        uses: actions/checkout@v4
        with:
          fetch-depth: 0  # Fetch all history for accurate analysis

      - name: Run Semgrep
        run: semgrep ci -v -o results.sarif --sarif || true
        env:
          SEMGREP_RULES: p/security-audit p/owasp-top-ten
